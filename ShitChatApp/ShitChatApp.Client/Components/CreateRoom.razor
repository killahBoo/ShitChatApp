@page "/createjoinroom"
@using ShitChatApp.Shared.Entities
@inject NavigationManager NavigationManager
@inject IAuthService authService
@rendermode InteractiveWebAssembly

@if (chatRoom is null)
{
	<h3>Hello!</h3>
	<p>Create or join a chat room</p>
	<br />

	<input @bind="newRoomName" placeholder="Room name" type="text" />
	<input @bind="roomCode" placeholder="Enter a 4 digit room code" type="text" />
	<button @onclick="CreateNewRoom">Create Room</button>

	<h5>Rooms:</h5>
	<ul>
		@foreach (var room in rooms)
		{
			<li>
				@room.RoomName
				<input @bind="reqRoomCode" placeholder="Room code" />
				<button @onclick="() => JoinRoom(room.ChatRoomID, reqRoomCode)">Join Room</button>
			</li>
		}
	</ul>
}
else
{
	<CascadingValue Value="hubConnection">
		<Room CurrentRoom="chatRoom"></Room>
	</CascadingValue>
}

@code {
	public HubConnection? hubConnection { get; set; }
	//private string userName;
	private string newRoomName = string.Empty;
	private string roomCode = string.Empty;
	private string reqRoomCode = string.Empty;
	//private ChatRoom? newRoom;
	private ChatRoom? chatRoom;
	private List<ChatRoom> rooms = new();

	protected override async Task OnInitializedAsync()
	{
		var token = authService.GetToken();
		if (token is null) return;

		hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri("/chathub")).Build();

		hubConnection.On<List<ChatRoom>>("GetRooms", (roomList) =>
		{
			rooms = roomList;
			InvokeAsync(StateHasChanged);
		});

		await hubConnection.StartAsync();
	}

	private async Task CreateNewRoom()
	{
		if (hubConnection is null) return;

		int code = int.Parse(roomCode);
		chatRoom = await hubConnection.InvokeAsync<ChatRoom>("CreateNewRoom", newRoomName, code);
	}

	private async Task JoinRoom(string roomId, string reqRoomCode)
	{
		if (hubConnection is null) return;

		int code = int.Parse(reqRoomCode);
		var reqRoom = rooms.SingleOrDefault(r => r.ChatRoomID == roomId);
		if (reqRoom is not null && reqRoom.RoomCode == code)
		{
			var joinedRoom = await hubConnection.InvokeAsync<ChatRoom>("JoinRoom", reqRoom.ChatRoomID);

			if (joinedRoom is not null)
			{
				chatRoom = joinedRoom;
			}
		}
	}
}
