@page "/"
@using System.Text.Encodings.Web
@inject NavigationManager NavigationManager
@rendermode InteractiveWebAssembly

<!--Welcome page-->

<h3>Welcome to the 💩-Chat!</h3>
<h5>Where you can share your worst toughts with the best of friends.</h5>
<p>Sign in or sign up below to start chatting.</p>

@if (isConnected)
{
	//GÖR OM TILL LOGIN/SIGNUP-SIDA
		<div class="form-group">
			<label for="username">Username</label>
			<input type="text" class="form-control" id="username" placeholder="Your name" @bind="userName">
		</div>
		<div class="form-group">
			<label for="message">Message</label>
			<input type="text" class="form-control" id="message" placeholder="Type a message..." @bind="messageInput">
		</div>
		<br />
		@if(userName is not null && messageInput is not null)
		{
		//<button @onclick="" class="btn btn-primary">Send</button>
		}
		else
		{
		<button class="btn btn-primary" disabled>Send</button>
		<p>Fill in name and message</p>
		}
	
	<br />
	<ul id="messagesList">
		@foreach(var message in messages)
		{
			<li>@message</li>
		}
	</ul>

}
else
{
	<span>Connecting...</span>
}

@code {
	private HubConnection hubConnection;
	private List<string> messages = new List<string>();
	private string userName;
	private string messageInput;

	protected override async Task OnInitializedAsync()
	{
		hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri("/chathub")).Build();

		//gör om nedan till inlogg/signup-funktionalitet
		hubConnection.On<string, string>("RecieveMessage", (user, message) =>
		{
			//gör en metod av detta istället?
			var encodedUser = HtmlEncoder.Default.Encode(user);
			var encodedMessage = HtmlEncoder.Default.Encode(message);
			var encodedMsg = $"{encodedUser}: {encodedMessage}";
			messages.Add(encodedMsg);
			InvokeAsync(StateHasChanged);
		});

		await hubConnection.StartAsync();
	}

	public bool isConnected => hubConnection.State == HubConnectionState.Connected;
}
